[tool.poetry]
name = "quarto-demo"
version = "0.2.2"
description = "Quarto demo"
authors = ["Adrian Cederberg <adrn.cederberg123@gmail.com>"]
readme = "README.md"
packages = [
  {include="dsa", from="blog"},
  {include="scripts"},
]


[tool.poetry.dependencies]
python = "^3.10"
numpy = "^2.0.0"
seaborn = "^0.13.2"
jupyter = "^1.0.0"
pandas = "^2.2.2"
shiny = "^0.10.2"
shinywidgets = "^0.3.2"
jupyter-cache = "^1.0.0"
shinylive = "^0.4.1"
yaml-settings-pydantic = "^2.3.0"
kaggle = "^1.6.17"
kagglehub = "^0.2.9"
pyright = "^1.1.377"
scikit-learn = "^1.5.1"
pyyaml = "^6.0.2"
pyarrow = "^17.0.0"
pytest = "^8.3.3"
yamllint = "^1.35.1"
watchdog = "^5.0.3"


[tool.poetry.group.torch.dependencies]
torch = {version = "^2.4.1+cpu", source = "pytorch_cpu"}
torchvision = {version = "^0.19.1+cpu", source = "pytorch_cpu"}


[tool.poetry.group.ci.dependencies]
bumpver = "^2023.1129"
mypy = "^1.11.2"
ruff = "^0.6.7"
python-lsp-server = "^1.11.0"
pandas-stubs = "^2.2.2.240909"
types-pyyaml = "^6.0.12.20240917"
pytest-cov = "^5.0.0"
black = "^24.10.0"


[tool.poetry.group.scripts.dependencies]
meta-tags-parser = "^1.3.0"
typer = "^0.12.5"

[[tool.poetry.source]]
name = "pytorch_cpu"
url = "https://download.pytorch.org/whl/cpu"
priority = "explicit"


[tool.acederbergio.icons]
origin = "https://unpkg.com"

  # [[tool.acederbergio.icons.sets]]
  # origin = "https://"
  # name = "kubernetes"

  [[tool.acederbergio.icons.sets]]
  destination = "devicon"
  name = "@iconify-json/devicon"
  version = "1.2.4"

  [[tool.acederbergio.icons.sets]]
  destination = "devicon-plain"
  name = "@iconify-json/devicon-plain"
  version = "1.2.4"

  [[tool.acederbergio.icons.sets]]
  destination = "hugeicons"
  name = "@iconify-json/hugeicons"
  version = "1.2.1"

  [[tool.acederbergio.icons.sets]]
  destination = "logos"
  name="@iconify-json/logos"
  version = "1.2.3"




[tool.bumpver]
current_version = "0.2.2"
version_pattern = "MAJOR.MINOR.PATCH"
commit_message  = "chore(version): Bump version {old_version} -> {new_version}"
commit          = true
tag             = true
push            = false


[tool.bumpver.file_patterns]
"pyproject.toml" = ['current_version = "{version}"', 'version = "{version}"']
"docker/compose.yaml" = ["image: acederberg/blog-dev:{version}"]
"docker/compose.prod.yaml" = ["ACEDERBERG_IO_SERVER_VERSION-{version}"]


[tool.pytest.ini_options]
python_files = ["tests/*.py", "blog/dsa/**/__init__.py"]


[tool.coverage.report]
fail_under = 60 
include = ["./blog/**/*.py"]
skip_covered = true
skip_empty = true
sort = "-cover" # NOTE: Sort from least to greatest coverage.


[tool.coverage.html]
directory = ".coverage-report"
title = "Captura PyTest Coverage Report"


[tool.mypy]
overrides = [
  {module = "kagglehub.*",ignore_missing_imports=true},
]


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
