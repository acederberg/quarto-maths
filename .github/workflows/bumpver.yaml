name: Version.
on:
  workflow_dispatch:
    inputs:
      dry_run:
        default: '0'
        description: Do not push changes, just put a diff in the step summary.
        options: ['0', '1']
      only_fix:
        default: '0'
        description: Do not increase the version, just do all of the fixing steps.
        options: ['0', '1']
      kind:
        default: patch
        required: true
        description: |
          Segment of the version to increment. A value of `tag` indicates 
          that only the tag should be updated.
        options: [tag, patch, minor, major]
      kind_tag:
        default: alpha
        required: true
        description: |
          Tag of the new version. Cannot go backwards, ordered like
          ``final > beta > alpha``. ``final`` indicates no tag.
        options: [final, alpha, beta]
      tag_message:
        required: true
        description: |
          Tag message an release body.
jobs:
  bumpver:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout.
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Ensure Python is Installed.
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # NOTE: Use the same cache as all others.
      - name: Cache Pip
        uses: actions/cache@v3
        id: venv
        with:
          path: .venv
          key: ${{ runner.os }}-venv-${{ hashFiles('poetry.lock') }}
      - name: Install Dependencies and Configure Git.
        id: bumpver-depends
        run: |
          python3 -m venv .venv
          source .venv/bin/activate
          python3 -m pip install poetry 
          poetry install --with ci
          git config user.name "github-actions"
          git config user.email "<>"

      # NOTE: Fixing steps.
      - continue-on-error: true
        run: |
          set +e
          source .venv/bin/activate
          black --check --quiet .
          BLACK_FIX=$?
          echo "BLACK_FIX=$BLACK_FIX" >> $GITHUB_ENV
          echo "BLACK_FIX=$BLACK_FIX" >> $GITHUB_STEP_SUMMARY
          yamlfix --check ./**/*.(yaml|yml)
          YAML_FIX=$?
          echo "YAML_FIX=$YAML_FIX" >> $GITHUB_ENV
          echo "YAML_FIX=$YAML_FIX" >> $GITHUB_STEP_SUMMARY
          GIT_COMMIT_INIT=$( git log --max-count=1 | grep commit | head -n 1 | sed 's/commit \([a-f0-9]*\)/\1/' )
          echo "GIT_COMMIT_INIT=$GIT_COMMIT_INIT" >> $GITHUB_ENV
      - name: Black Fix.
        if: env.BLACK_FIX == 1
        id: bumpver-black-fix
        run: |
          source .venv/bin/activate
          black .
          git add . 
          git commit -m "chore(fix): Black fix."
      - name: YamlFix Fix.
        run: |
          source .venv/bin/activate
          yamlfix ./blog
          git add .
          git commit -m "chore(fix): Yaml Fix."

      # NOTE: This will not be published so it is fine that it happens at this
      #       stage.
      - name: Build and Verify.
        id: bumpver-build-and-verify
        run: |
          source .venv/bin/activate
          echo -e "## Build\n\n~~~stdout" >> $GITHUB_STEP_SUMMARY
          poetry build >> $GITHUB_STEP_SUMMARY
          echo "~~~\n\n## Twine Check\n\n~~~stdout" >> $GITHUB_STEP_SUMMARY
          poetry check >> $GITHUB_STEP_SUMMARY
          echo "~~~" >> $GITHUB_STEP_SUMMARY

      # NOTE: Poetry does have versioning capabilities however they do not 
      #       appear to have much of an advantage over bumpver.
      - name: Increment Version.
        if: github.event.inputs.only_fix == '0'
        id: bumpver-update
        run: |-
          source .venv/bin/activate
          echo -e "## Bumpver Data\n\n" >> $GITHUB_STEP_SUMMARY
          echo "- kind: ${{ github.event.inputs.kind }}" >> $GITHUB_STEP_SUMMARY
          echo "- kind_tag: ${{ github.event.inputs.kind_tag }}" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ github.event.inputs.kind}}" == "tag" ]];
          then
            python -m bumpver update \
              --tag "${{ github.event.inputs.kind_tag }}" \
              --tag-message "${{ github.event.inputs.tag_message }}" \
              --commit
          else
            python -m bumpver update "--${{ github.event.inputs.kind }}" \
              --tag "${{ github.event.inputs.kind_tag }}" \
              --tag-message "${{ github.event.inputs.tag_message }}" \
              --commit
          fi
      - name: Git Push.
        run: |-
          if [[ "${{ github.event.inputs.dry_run }}" == "1" ]];
          then
            git push
            git push --tags
          else
            echo -e "## Dry Run Diff\n\n~~~stdout" >> $GITHUB_STEP_SUMMARY
            git diff "${{ env.GIT_COMMIT_INIT }}" >> $GITHUB_STEP_SUMMARY
            echo "~~~" >> $GITHUB_STEP_SUMMARY
          fi
