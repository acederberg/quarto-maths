/*-- scss:functions --*/
@function make-shadow($scale, $color: rgba(0, 0, 0, 0.5)) {
  $size: $scale * 1px;
  $spread: $scale * 2px;
  $shadow: drop-shadow($size $size $spread $color);

  @return $shadow;
}

@function make-transform($scale) {
  @return scale(100% + $scale) translateY(-$scale);
}

/*-- scss:variables --*/
$floaty-shadow-1: make-shadow(5);
$floaty-shadow-2: make-shadow(8);
$floaty-shadow-3: make-shadow(13);
$floaty-shadow-4: make-shadow(21);
$floaty-shadows : (1:$floaty-shadow-1,
  2: $floaty-shadow-2,
  3: $floaty-shadow-3,
  4: $floaty-shadow-4,
);

$floaty-transform-1: make-transform(5%);
$floaty-transform-2: make-transform(8%);
$floaty-transform-3: make-transform(13%);
$floaty-transform-4: make-transform(21%);
$floaty-transforms: (
  1: $floaty-transform-1,
  2: $floaty-transform-2,
  3: $floaty-transform-3,
  4: $floaty-transform-4,
);

$floaty-border-hover: 3px solid var(--bs-primary) !important;
$floaty-border: 3px solid rgba(0, 0, 0, 0) !important;

/*-- scss:rules --*/

// start snippet make-floaty
@mixin make-floaty {
  .floaty-container {
    @include make-container();

    .floaty-row {
      @include make-row();

      .floaty-item {
        @include make-col();
        @include make-container();

        .floaty-item-container {
          @include make-row();

          .floaty-item-img {
            @include make-col();

            display: flex;
            flex-grow: 5;

            i,
            iconify-icon {
              margin: auto;
            }
          }

          .floaty-item-title {
            @include make-col();
            flex-grow: 13;
          }

          .floaty-item-text {
            @include make-col();
            flex-grow: 34;
          }
        }


        .card {
          border: none;

          .card-img-top {
            display: flex;

            i,
            iconify-icon {
              margin: auto;
            }
          }

          .card-body {
            text-align: center;
          }
        }
      }
    }
  }

  &.floaty-hover {
    .card {
      cursor: pointer;
    }
  }

  @for $k from 1 through 4 {
    &.floaty-shadow-#{$k} {
      iconify-icon {
        filter: map-get($floaty-shadows, $k);
      }
    }
  }

}

// end snippet make-floaty

@mixin make-floaty-size($scale, $font-size) {
  .card {
    $font-size-svg: calc($scale * $font-size);

    border-bottom: $floaty-border;

    .card-img-top {
      font-size: $font-size-svg;

      i,
      iconify-icon {
        min-height: $font-size-svg;
      }
    }

    .card-body {

      /* Because putting header elements in comes with too much bagage. */
      .card-title {
        font-weight: $font-weight-bold;
        font-size: $font-size;
      }

      .card-text {
        font-weight: $font-weight-lighter;
      }
    }
  }
}

/* ------------------------------------------------------------------------- */

@mixin make-bg($bg) {
  background: $bg;
  padding: 10px;
  border-radius: $border-radius-lg;
}


/*

  NOTE: It is often necessary to add some padding on top to avoid icon exceeding background.

*/
@mixin make-icon-filter($filter-init, $filter-final, $transform) {

  .card {
    background: rgba(0, 0, 0, 0);
    transition: border 0.1s; //, background 1s;

    .card-img-top {

      i,
      iconify-icon {
        transition:
          /* filter 0.1s, */
          transform 0.1s;
        /* background 1s; */

        filter: $filter-init;
      }

    }
  }

  &.floaty-hover {

    .card {

      &.hover,
      &:hover {

        filter: $filter-final;
        /* filter: $filter-init; */
        /* background: var(--bs-gray-200); */
        border-bottom: $floaty-border-hover;
        border-radius: 0px;

        .card-img-top {

          i,
          iconify-icon {
            background: rgba(0, 0, 0, 0);
            transform: $transform;
            filter: none;
          }
        }

      }
    }
  }
}

@mixin make-floaty-icon-bg($bg) {
  .card {

    i,
    iconify-icon {
      @include make-bg($bg);
    }
  }

  @for $k from 1 through 4 {
    &.floaty-shadow-#{$k} {

      /*
      .hover,
      .card:hover {
        background: $bg;
      }
      */

      @include make-icon-filter(map-get($floaty-shadows, $k), none, map-get($floaty-transforms, $k));
    }
  }
}


/* ------------------------------------------------------------------------- */

@mixin make-card-filter($filter, $filter-final, $transform) {

  .card {
    filter: $filter;
    transition: filter 0.1s, transform 0.1s, background 1s;
    margin: auto;

    // Remove the pre-existing shadow.
    .card-img-top {

      i,
      iconify-icon {
        filter: none;
      }
    }

  }


  &.floaty-hover {

    .card.hover,
    .card:hover {
      background: var(--bs-gray-200);

      border-bottom: $floaty-border-hover;
      border-radius: 0px;

      filter: $filter-final;
      transform: $transform;
      z-index: 1;
    }

  }
}


@mixin make-floaty-card-bg($bg) {
  .card {
    @include make-bg($bg);
  }

  @for $k from 1 through 4 {
    &.floaty-shadow-#{$k} {
      @include make-card-filter(map-get($floaty-shadows, $k), none, map-get($floaty-transforms, $k), );
    }
  }

}


/* ------------------------------------------------------------------------- */

/* Bare Minimum */

.floaty {
  @include make-floaty();

  @for $k from 1 through 6 {
    &.floaty-size-#{$k} {
      @include make-floaty-size(4, map-get($font-sizes, $k));
    }
  }



  /* Backgrounds for Icons */

  &.floaty-bg-dark {
    @include make-floaty-icon-bg($black);
  }

  &.floaty-bg-light {
    @include make-floaty-icon-bg($white);
  }

  &.floaty-bg {
    @include make-floaty-icon-bg($body-color);

  }

  /* Backgrounds for Cards */
  &.floaty-card-bg-dark {
    @include make-floaty-card-bg($black);
  }

  &.floaty-card-bg-light {
    @include make-floaty-card-bg($white);
  }

  &.floaty-card-bg {
    @include make-floaty-card-bg($body-color);
  }

}


/* ------------------------------------------------------------------------- */
/* Under construction floaty. */

@mixin make-under-construction-size($scale, $size) {
  &.floaty {
    @include make-floaty-size($scale, $size);
  }
}

// Font size on icons must be overwritten directly.
.under-construction {
  width: 100%;
  border: 1px solid rgba(255, 0, 0, 0.2);
  border-left: 5px solid var(--bs-red);
  border-radius: 5px;

  @for $k from 1 through 6 {
    &.under-construction-#{$k} {
      @include make-under-construction-size(4, map-get($font-sizes, $k));
    }
  }

}
